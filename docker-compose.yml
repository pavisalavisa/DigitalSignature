version: '3.4'

services:
  manager-api:
    image: ${DOCKER_REGISTRY-}soccer-manager-api
    build:
      context: src/DigitalSignatureManager
      dockerfile: Api/Dockerfile
    environment:
    # Nice conversation starter :)
    # These values are secrets and should not be handled like this
      - "ConnectionStrings__DefaultConnection=Server=db;Database=DigitalSignatureDb;User=sa;Password=MyPassword123;MultipleActiveResultSets=true"
      - "ASPNETCORE_Kestrel__Certificates__Default__Password=password123"
      - "ASPNETCORE_Kestrel__Certificates__Default__Path=/https/SoccerManager.pfx"
      - "ASPNETCORE_ENVIRONMENT=Production"

    volumes:
      - ~/.aspnet/https:/https:ro
    ports:
      - "4200:4200"
      - "4201:4201"
    depends_on:
      - db
      - signer-api
    restart: on-failure

  signer-api:
    image: ${DOCKER_REGISTRY-}digital-signature-signer-api
    build:
      context: src/DigitalSignatureSigner
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - crl-provider
      - ocsp-provider
# Nice conversation starter :)
# How to handle DB in the containerized world
  db:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      - "SA_PASSWORD=MyPassword123"
      - "ACCEPT_EULA=Y"
  crl-provider:
    image: ${DOCKER_REGISTRY-}digital-signature-crl-provider
    build:
        context: src/CRLProvider
        dockerfile: Dockerfile
    hostname: crl.example.com
    restart: always
    volumes:
      - ./src/ExamplePKI/root/ca/intermediate/crl:/srv/crl/intermediate
      - ./src/ExamplePKI/root/ca/crl:/srv/crl/ca  
    ports:
      - 80:80
  ocsp-provider:
    image: ${DOCKER_REGISTRY-}digital-signature-ocsp-provider
    build:
        context: src/OCSPProvider
        dockerfile: Dockerfile
    hostname: ocsp.example.com
    restart: always
    volumes:
      - ./src/ExamplePKI/root:/root  
    ports:
      - 2560:80
